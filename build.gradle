group 'pl.estrix'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
    }
}

apply plugin: "org.sonarqube"
apply plugin: 'java'
apply plugin: 'jacoco'



sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    maven { url "http://repo1.maven.org/maven2/" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.2'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.+'
    compileOnly  group: 'org.projectlombok', name: 'lombok', version: '1.16.12'

    compile group: 'org.jongo', name: 'jongo', version: '1.1'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '2.+'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
}

test {
    jacoco {
        destinationFile = file("${buildDir}/reports/jacoco/jacocoTest.exec")
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/reports/jacoco/*.exec")

    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled true
        csv.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Java :: Tests Project"
        property "sonar.projectKey", "org.sonarqube:test-as-ack"
    }
}
